{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\private_sites\\\\FinancialOverview.js\";\nimport { React, Component } from 'react';\nimport { supabase } from '../components/supabaseClient';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function FinancialOverview() {\n  const income_data = fetchFinancialData_forUser(supabase.auth.user().id).then(data => {\n    console.log(\"then\");\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toptext\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: \"Verm\\xF6genseingabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Einnahmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                className: \"bg-light\"\n                /*onChange={e => this.setState({ value: e.target.value })} value={this.state.value}*/\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"inputField\",\n                variant: \"secondary\"\n                /*onClick={() => {this.createCategory()}}*/\n                ,\n                children: \"Create Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: income_data[0].map(incomeform => {\n              insert_accordion(incomeform);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  });\n}\n_c = FinancialOverview;\n\nasync function createCategory() {\n  const {\n    data,\n    error\n  } = await supabase.from('income_forms').insert([{\n    /*title: this.state.value, user_id: 1*/\n  }]);\n}\n\nasync function fetchIncomeForms_forUser(user_id) {\n  const {\n    data,\n    error\n  } = await supabase.from(\"income_forms\").select().eq(\"user_id\", user_id);\n  return data;\n}\n\nasync function fetchIncomes_forIncomeForms(income_forms_id) {\n  const {\n    data,\n    error\n  } = await supabase.from(\"incomes\").select().eq(\"income_forms_id\", income_forms_id);\n  return data;\n}\n\nasync function fetchSpendingForms_forUser(user_id) {\n  const {\n    data,\n    error\n  } = await supabase.from(\"spending_forms\").select().eq(\"user_id\", user_id);\n  return data;\n}\n\nasync function fetchSpendings_forSpendingForms(spending_forms_id) {\n  const {\n    data,\n    error\n  } = await supabase.from(\"spendings\").select().eq(\"spending_forms_id\", spending_forms_id);\n  return data;\n}\n\nasync function fetchFinancialData_forUser(user_id) {\n  const data_income_forms = await fetchIncomeForms_forUser(user_id);\n  const incomes_array = await Promise.all(data_income_forms.map(async income_form => {\n    await fetchIncomes_forIncomeForms(income_form.id);\n  }));\n  return [data_income_forms, incomes_array];\n}\n\nfunction insert_accordion(form) {\n  return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: form.id,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: form.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          className: \"bg-light\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          className: \"bg-light\",\n          placeholder: \"Preis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"inputField\",\n          variant: \"secondary\"\n          /*onClick={() => {this.addTableContent()}}*/\n          ,\n          children: \"hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Preis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\nfunction insert_table(income_entry) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: income_entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: income_entry.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FinancialOverview\");","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/private_sites/FinancialOverview.js"],"names":["React","Component","supabase","Container","Row","Col","Accordion","Table","Button","InputGroup","FormControl","FinancialOverview","income_data","fetchFinancialData_forUser","auth","user","id","then","data","console","log","map","incomeform","insert_accordion","createCategory","error","from","insert","fetchIncomeForms_forUser","user_id","select","eq","fetchIncomes_forIncomeForms","income_forms_id","fetchSpendingForms_forUser","fetchSpendings_forSpendingForms","spending_forms_id","data_income_forms","incomes_array","Promise","all","income_form","form","title","insert_table","income_entry","amount"],"mappings":"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","sourcesContent":["import { React, Component } from 'react';\r\nimport { supabase } from '../components/supabaseClient'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\n\r\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport function FinancialOverview() {\r\n    const income_data = fetchFinancialData_forUser(supabase.auth.user().id).then(data => {\r\n        console.log(\"then\");\r\n        console.log(data)\r\n        \r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"toptext\">\r\n                            <h1 className=\"text-center\">Vermögenseingabe</h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col md={6}>\r\n                        <div className=\"inTitle\">\r\n                            <h2 className=\"text-center\">Einnahmen</h2>\r\n                        </div>\r\n                        <div className=\"inTitle\">\r\n                            <InputGroup>\r\n                                <FormControl type=\"text\" className=\"bg-light\" /*onChange={e => this.setState({ value: e.target.value })} value={this.state.value}*/ />\r\n                                <Button className=\"inputField\" variant=\"secondary\" /*onClick={() => {this.createCategory()}}*/>Create Category</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <Accordion>\r\n                            {\r\n                                income_data[0].map(incomeform => {insert_accordion(incomeform)})\r\n                            }\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    })\r\n\r\n}\r\n\r\n\r\nasync function createCategory() {\r\n    const { data, error } = await supabase\r\n    .from('income_forms')\r\n    .insert([\r\n        { /*title: this.state.value, user_id: 1*/ }\r\n    ])\r\n}\r\n\r\nasync function fetchIncomeForms_forUser(user_id) {\r\n    const { data, error } = await supabase\r\n    .from(\"income_forms\")\r\n    .select()\r\n    .eq(\"user_id\", user_id)\r\n    return data\r\n}\r\n\r\nasync function fetchIncomes_forIncomeForms(income_forms_id) {\r\n    const { data, error } = await supabase\r\n    .from(\"incomes\")\r\n    .select()\r\n    .eq(\"income_forms_id\", income_forms_id)\r\n    return data\r\n}\r\n\r\nasync function fetchSpendingForms_forUser(user_id) {\r\n    const { data, error } = await supabase\r\n    .from(\"spending_forms\")\r\n    .select()\r\n    .eq(\"user_id\", user_id)\r\n    return data\r\n}\r\n\r\nasync function fetchSpendings_forSpendingForms(spending_forms_id) {\r\n    const { data, error } = await supabase\r\n    .from(\"spendings\")\r\n    .select()\r\n    .eq(\"spending_forms_id\", spending_forms_id)\r\n    return data\r\n}\r\n\r\nasync function fetchFinancialData_forUser(user_id){\r\n    const data_income_forms = await fetchIncomeForms_forUser(user_id)\r\n    const incomes_array = await Promise.all(data_income_forms.map(async income_form => {\r\n        await fetchIncomes_forIncomeForms(income_form.id)\r\n    }))\r\n\r\n\r\n    \r\n    return [data_income_forms, incomes_array]\r\n}\r\n\r\n\r\nfunction insert_accordion(form) {\r\n    return(\r\n        <Accordion.Item eventKey={form.id}>\r\n            <Accordion.Header>{form.title}</Accordion.Header>\r\n            <Accordion.Body>\r\n                <InputGroup>\r\n                    <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" />\r\n                    <FormControl type=\"text\" className=\"bg-light\"  placeholder=\"Preis\" />\r\n                    <Button className=\"inputField\" variant=\"secondary\" /*onClick={() => {this.addTableContent()}}*/>hinzufügen</Button>\r\n                </InputGroup>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        //this.state.incomes_or_spendings.map((income_or_spending) => {insert_table(income_or_spending)})\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </Accordion.Body>\r\n        </Accordion.Item>\r\n    );\r\n}\r\n\r\nfunction insert_table(income_entry) {\r\n    return(\r\n        <>\r\n            <tr>\r\n                <td>{income_entry.title}</td>\r\n                <td>{income_entry.amount}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}