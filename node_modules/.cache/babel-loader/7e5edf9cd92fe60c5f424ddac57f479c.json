{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\private_sites\\\\FinancialOverview.js\";\nimport { Component, React, useRef } from 'react';\nimport { supabase } from '../components/supabaseClient';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FinancialOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      income_forms: [],\n      spending_forms: [],\n      incomes: [],\n      spendings: []\n    };\n  }\n\n  async createCategory(title) {\n    const {\n      data,\n      error\n    } = await supabase.from('income_forms').insert([{\n      title: title,\n      user_id: supabase.auth.user().id\n    }]);\n    this.componentDidMount();\n  }\n\n  async componentDidMount() {\n    const user_id = supabase.auth.user().id;\n    const data_income_forms = await this.fetchIncomeForms_forUser(user_id);\n    const data_incomes_array = await Promise.all(data_income_forms.map(async income_form => {\n      await this.fetchIncomes_forIncomeForms(income_form.id);\n    }));\n    console.log(data_incomes_array);\n    this.setState({\n      income_forms: data_income_forms,\n      incomes: data_incomes_array\n    });\n  }\n\n  async fetchIncomeForms_forUser(user_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"income_forms\").select();\n    return data;\n  }\n\n  async fetchIncomes_forIncomeForms(income_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"incomes\").select();\n    return data;\n  }\n\n  async fetchSpendingForms_forUser(user_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spending_forms\").select().eq(\"user_id\", user_id);\n    return data;\n  }\n\n  async fetchSpendings_forSpendingForms(spending_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spendings\").select().eq(\"spending_forms_id\", spending_forms_id);\n    return data;\n  }\n\n  render() {\n    const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toptext\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: \"Verm\\xF6genseingabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Einnahmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"number\",\n                onKeyDown: e => {\n                  if (!valid_numbers_input.includes(e.key)) e.preventDefault();else console.log(e.key);\n                },\n                id: \"new_form_input\",\n                placeholder: \"Neue Kategorie\",\n                className: \"bg-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"inputField\",\n                variant: \"secondary\",\n                onClick: () => {\n                  const input = document.getElementById(\"new_form_input\");\n                  this.createCategory(input.value);\n                  input.value = \"\";\n                },\n                children: \"Create Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: this.state.income_forms.map(incomeform => /*#__PURE__*/_jsxDEV(InsertAccoridon, {\n              form: incomeform,\n              amounts: this.state.incomes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 75\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertAccoridon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {},\n      amounts: []\n    };\n    this.state = {\n      form: props.form,\n      amounts: props.amounts\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: this.state.form.id,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: this.state.form.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Name\",\n            onChange: e => this.setState({\n              value: e.target.namevalue\n            }),\n            namevalue: this.state.namevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Preis\",\n            onChange: e => this.setState({\n              value2: e.target.pricevalue\n            }),\n            pricevalue: this.state.pricevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"inputField\",\n            variant: \"secondary\",\n            onClick: () => {\n              this.addTableContent();\n            },\n            children: \"hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Preis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      income: {}\n    };\n    this.state = {\n      income: props.income\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.income.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.income.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/private_sites/FinancialOverview.js"],"names":["Component","React","useRef","supabase","Container","Row","Col","Accordion","Table","Button","InputGroup","FormControl","FinancialOverview","constructor","props","state","value","income_forms","spending_forms","incomes","spendings","createCategory","title","data","error","from","insert","user_id","auth","user","id","componentDidMount","data_income_forms","fetchIncomeForms_forUser","data_incomes_array","Promise","all","map","income_form","fetchIncomes_forIncomeForms","console","log","setState","select","income_forms_id","fetchSpendingForms_forUser","eq","fetchSpendings_forSpendingForms","spending_forms_id","render","valid_numbers_input","e","includes","key","preventDefault","input","document","getElementById","incomeform","InsertAccoridon","form","amounts","target","namevalue","value2","pricevalue","addTableContent","InsertTable","income","amount"],"mappings":"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","sourcesContent":["import {Component, React, useRef} from 'react';\r\nimport { supabase } from '../components/supabaseClient'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\n\r\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport class FinancialOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', income_forms: [], spending_forms: [], incomes: [], spendings: []};\r\n    }\r\n\r\n\r\n    async createCategory(title) {\r\n        const { data, error } = await supabase\r\n            .from('income_forms')\r\n            .insert([\r\n                { title: title, user_id: supabase.auth.user().id }\r\n            ])\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const user_id = supabase.auth.user().id\r\n\r\n        const data_income_forms = await this.fetchIncomeForms_forUser(user_id)\r\n        const data_incomes_array = await Promise.all(data_income_forms.map(async income_form => {\r\n            await this.fetchIncomes_forIncomeForms(income_form.id)\r\n        }))\r\n\r\n        console.log(data_incomes_array)\r\n\r\n        this.setState({income_forms: data_income_forms, incomes: data_incomes_array});\r\n    }\r\n\r\n    async fetchIncomeForms_forUser(user_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"income_forms\")\r\n            .select()\r\n        return data\r\n    }\r\n\r\n    async fetchIncomes_forIncomeForms(income_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"incomes\")\r\n            .select()\r\n        return data\r\n    }\r\n\r\n    async fetchSpendingForms_forUser(user_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spending_forms\")\r\n            .select()\r\n            .eq(\"user_id\", user_id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings_forSpendingForms(spending_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spendings\")\r\n            .select()\r\n            .eq(\"spending_forms_id\", spending_forms_id)\r\n        return data\r\n    }\r\n\r\n    render() {\r\n        const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\n\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"toptext\">\r\n                            <h1 className=\"text-center\">Vermögenseingabe</h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col md={6}>\r\n                        <div className=\"inTitle\">\r\n                            <h2 className=\"text-center\">Einnahmen</h2>\r\n                        </div>\r\n                        <div className=\"inTitle\">\r\n                            <InputGroup>\r\n                                <FormControl type=\"number\" onKeyDown={e => {if (!valid_numbers_input.includes(e.key)) e.preventDefault(); else console.log(e.key)}} id=\"new_form_input\" placeholder=\"Neue Kategorie\" className=\"bg-light\" />\r\n                                <Button className=\"inputField\" variant=\"secondary\" onClick={() => {\r\n                                    const input = document.getElementById(\"new_form_input\")\r\n                                    this.createCategory(input.value)\r\n                                    input.value = \"\"\r\n                                }}>Create Category</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <Accordion>\r\n                            {\r\n                                this.state.income_forms.map(incomeform => <InsertAccoridon form={incomeform} amounts={this.state.incomes} />)\r\n                            }\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertAccoridon extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {form: {}, amounts: []};\r\n\r\n        this.state = {\r\n            form: props.form,\r\n            amounts: props.amounts\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Accordion.Item eventKey={this.state.form.id}>\r\n                <Accordion.Header>{this.state.form.title}</Accordion.Header>\r\n                <Accordion.Body>\r\n                    <InputGroup>\r\n                        <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" onChange={e => this.setState({ value: e.target.namevalue })} namevalue={this.state.namevalue} />\r\n                        <FormControl type=\"text\" className=\"bg-light\"  placeholder=\"Preis\" onChange={e => this.setState({ value2: e.target.pricevalue })} pricevalue={this.state.pricevalue} />\r\n                        <Button className=\"inputField\" variant=\"secondary\" onClick={() => {this.addTableContent()}}>hinzufügen</Button>\r\n                    </InputGroup>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            //this.state.amounts.map(income => <InsertTable income={income} />)\r\n                        }\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {income: {}};\r\n\r\n        this.state = {\r\n            income: props.income\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>{this.state.income.title}</td>\r\n                <td>{this.state.income.amount}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}