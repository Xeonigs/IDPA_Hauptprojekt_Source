{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\private_sites\\\\FinancialOverview.js\";\nimport { Component, React, useRef } from 'react';\nimport { supabase } from '../components/supabaseClient';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class FinancialOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      income_forms: [],\n      spending_forms: [],\n      incomes: [],\n      spendings: []\n    };\n  }\n\n  async createCategory(title) {\n    const {\n      data,\n      error\n    } = await supabase.from('income_forms').insert([{\n      title: title,\n      user_id: supabase.auth.user().id\n    }]);\n    this.componentDidMount();\n  }\n\n  async componentDidMount() {\n    const data = await this.fetchFinancialData_forUser(supabase.auth.user().id);\n    console.log(data);\n    this.setState({\n      income_forms: data[0],\n      incomes: data[1]\n    });\n  }\n\n  async fetchIncomeForms_forUser(user_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"income_forms\").select().eq(\"user_id\", user_id);\n    return data;\n  }\n\n  async fetchIncomes_forIncomeForms(income_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"incomes\").select().eq(\"income_forms_id\", income_forms_id);\n    return data;\n  }\n\n  async fetchSpendingForms_forUser(user_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spending_forms\").select().eq(\"user_id\", user_id);\n    return data;\n  }\n\n  async fetchSpendings_forSpendingForms(spending_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spendings\").select().eq(\"spending_forms_id\", spending_forms_id);\n    return data;\n  }\n\n  async fetchFinancialData_forUser(user_id) {\n    const data_income_forms = await this.fetchIncomeForms_forUser(user_id);\n    const incomes_array = await Promise.all(data_income_forms.map(async income_form => {\n      await this.fetchIncomes_forIncomeForms(income_form.id);\n    }));\n    return [data_income_forms, incomes_array];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toptext\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: \"Verm\\xF6genseingabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Einnahmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                id: \"new_form_input\",\n                className: \"bg-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"inputField\",\n                variant: \"secondary\",\n                onClick: () => {\n                  const input = document.getElementById(\"new_form_input\").value;\n                  this.createCategory(input);\n                  input = \"\";\n                },\n                children: \"Create Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: this.state.income_forms.map(incomeform => /*#__PURE__*/_jsxDEV(InsertAccoridon, {\n              form: incomeform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 75\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertAccoridon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {}\n    };\n    this.state = {\n      form: props.form\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: this.state.form.id,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: this.state.form.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Name\",\n            onChange: e => this.setState({\n              value: e.target.namevalue\n            }),\n            namevalue: this.state.namevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Preis\",\n            onChange: e => this.setState({\n              value2: e.target.pricevalue\n            }),\n            pricevalue: this.state.pricevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"inputField\",\n            variant: \"secondary\",\n            onClick: () => {\n              this.addTableContent();\n            },\n            children: \"hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Preis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      income: {}\n    };\n    this.state = {\n      income: props.income\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.income.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.income.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction insert_accordion(form) {\n  return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: form.id,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: form.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          className: \"bg-light\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          className: \"bg-light\",\n          placeholder: \"Preis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"inputField\",\n          variant: \"secondary\"\n          /*onClick={() => {this.addTableContent()}}*/\n          ,\n          children: \"hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Preis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n\nfunction insert_table(income_entry) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: income_entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: income_entry.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/private_sites/FinancialOverview.js"],"names":["Component","React","useRef","supabase","Container","Row","Col","Accordion","Table","Button","InputGroup","FormControl","FinancialOverview","constructor","props","state","value","income_forms","spending_forms","incomes","spendings","createCategory","title","data","error","from","insert","user_id","auth","user","id","componentDidMount","fetchFinancialData_forUser","console","log","setState","fetchIncomeForms_forUser","select","eq","fetchIncomes_forIncomeForms","income_forms_id","fetchSpendingForms_forUser","fetchSpendings_forSpendingForms","spending_forms_id","data_income_forms","incomes_array","Promise","all","map","income_form","render","input","document","getElementById","incomeform","InsertAccoridon","form","e","target","namevalue","value2","pricevalue","addTableContent","InsertTable","income","amount","insert_accordion","insert_table","income_entry"],"mappings":"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","sourcesContent":["import {Component, React, useRef} from 'react';\r\nimport { supabase } from '../components/supabaseClient'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\n\r\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport class FinancialOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', income_forms: [], spending_forms: [], incomes: [], spendings: []};\r\n    }\r\n\r\n\r\n    async createCategory(title) {\r\n        const { data, error } = await supabase\r\n            .from('income_forms')\r\n            .insert([\r\n                { title: title, user_id: supabase.auth.user().id }\r\n            ])\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const data = await this.fetchFinancialData_forUser(supabase.auth.user().id)\r\n\r\n        console.log(data)\r\n\r\n        this.setState({income_forms: data[0], incomes: data[1]});\r\n    }\r\n\r\n    async fetchIncomeForms_forUser(user_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"income_forms\")\r\n            .select()\r\n            .eq(\"user_id\", user_id)\r\n        return data\r\n    }\r\n\r\n    async fetchIncomes_forIncomeForms(income_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"incomes\")\r\n            .select()\r\n            .eq(\"income_forms_id\", income_forms_id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendingForms_forUser(user_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spending_forms\")\r\n            .select()\r\n            .eq(\"user_id\", user_id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings_forSpendingForms(spending_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spendings\")\r\n            .select()\r\n            .eq(\"spending_forms_id\", spending_forms_id)\r\n        return data\r\n    }\r\n\r\n    async fetchFinancialData_forUser(user_id){\r\n        const data_income_forms = await this.fetchIncomeForms_forUser(user_id)\r\n        const incomes_array = await Promise.all(data_income_forms.map(async income_form => {\r\n            await this.fetchIncomes_forIncomeForms(income_form.id)\r\n        }))\r\n\r\n        return [data_income_forms, incomes_array]\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"toptext\">\r\n                            <h1 className=\"text-center\">Vermögenseingabe</h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col md={6}>\r\n                        <div className=\"inTitle\">\r\n                            <h2 className=\"text-center\">Einnahmen</h2>\r\n                        </div>\r\n                        <div className=\"inTitle\">\r\n                            <InputGroup>\r\n                                <FormControl type=\"text\" id=\"new_form_input\" className=\"bg-light\" />\r\n                                <Button className=\"inputField\" variant=\"secondary\" onClick={() => {\r\n                                    const input = document.getElementById(\"new_form_input\").value\r\n                                    this.createCategory(input)\r\n                                    input = \"\"\r\n                                }}>Create Category</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <Accordion>\r\n                            {\r\n                                this.state.income_forms.map(incomeform => <InsertAccoridon form={incomeform} />)\r\n                            }\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertAccoridon extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {form: {}};\r\n\r\n        this.state = {\r\n            form: props.form\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Accordion.Item eventKey={this.state.form.id}>\r\n                <Accordion.Header>{this.state.form.title}</Accordion.Header>\r\n                <Accordion.Body>\r\n                    <InputGroup>\r\n                        <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" onChange={e => this.setState({ value: e.target.namevalue })} namevalue={this.state.namevalue} />\r\n                        <FormControl type=\"text\" className=\"bg-light\"  placeholder=\"Preis\" onChange={e => this.setState({ value2: e.target.pricevalue })} pricevalue={this.state.pricevalue} />\r\n                        <Button className=\"inputField\" variant=\"secondary\" onClick={() => {this.addTableContent()}}>hinzufügen</Button>\r\n                    </InputGroup>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            //this.state.income.map(income=>(<InsertTable income={income} />))\r\n                        }\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {income: {}};\r\n\r\n        this.state = {\r\n            income: props.income\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>{this.state.income.title}</td>\r\n                <td>{this.state.income.amount}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction insert_accordion(form) {\r\n    return(\r\n        <Accordion.Item eventKey={form.id}>\r\n            <Accordion.Header>{form.title}</Accordion.Header>\r\n            <Accordion.Body>\r\n                <InputGroup>\r\n                    <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" />\r\n                    <FormControl type=\"text\" className=\"bg-light\"  placeholder=\"Preis\" />\r\n                    <Button className=\"inputField\" variant=\"secondary\" /*onClick={() => {this.addTableContent()}}*/>hinzufügen</Button>\r\n                </InputGroup>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        //this.state.incomes_or_spendings.map((income_or_spending) => {insert_table(income_or_spending)})\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </Accordion.Body>\r\n        </Accordion.Item>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction insert_table(income_entry) {\r\n    return(\r\n        <>\r\n            <tr>\r\n                <td>{income_entry.title}</td>\r\n                <td>{income_entry.amount}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}