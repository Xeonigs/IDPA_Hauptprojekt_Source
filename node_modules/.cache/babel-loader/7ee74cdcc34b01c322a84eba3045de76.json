{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\private_sites\\\\FinancialOverview.js\";\nimport { Component, React } from 'react';\nimport { supabase } from '../components/supabaseClient';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class FinancialOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      income_forms: [],\n      spending_forms: [],\n      incomes: [],\n      spendings: []\n    };\n  }\n\n  async createCategory() {\n    const {\n      data,\n      error\n    } = await supabase.from('income_forms').insert([{\n      title: this.state.value,\n      user_id: 1\n    }]);\n    this.componentDidMount();\n    this.setState({\n      value: \"\"\n    });\n  }\n\n  async fetchIncomeForms_forUser(user_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"income_forms\").select().eq(\"user_id\", user_id);\n    return data;\n  }\n\n  async fetchIncomes_forIncomeForms(income_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"incomes\").select().eq(\"income_forms_id\", income_forms_id);\n    return data;\n  }\n\n  async fetchSpendingForms_forUser(user_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spending_forms\").select().eq(\"user_id\", user_id);\n    return data;\n  }\n\n  async fetchSpendings_forSpendingForms(spending_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spendings\").select().eq(\"spending_forms_id\", spending_forms_id);\n    return data;\n  }\n\n  async fetchFinancialData_forUser(user_id) {\n    const data_income_forms = await this.fetchIncomeForms_forUser(user_id);\n    const incomes_array = await Promise.all(data_income_forms.map(async income_form => {\n      await this.fetchIncomes_forIncomeForms(income_form.id);\n    }));\n    return [data_income_forms, incomes_array];\n  }\n\n  async componentDidMount() {\n    const data = await this.fetchIncomeForms_forUser(supabase.auth.user().id);\n    this.setState({\n      income_forms: data[0],\n      spending_forms: data[1]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toptext\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: \"Verm\\xF6genseingabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Einnahmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                className: \"bg-light\"\n                /*onChange={e => this.setState({ value: e.target.value })} value={this.state.value}*/\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"inputField\",\n                variant: \"secondary\"\n                /*onClick={() => {this.createCategory()}}*/\n                ,\n                children: \"Create Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: this.state.income_forms.map(incomeform => /*#__PURE__*/_jsxDEV(InsertAccoridon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 75\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertAccoridon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      namevalue: '',\n      data: [],\n      pricevalue: ''\n    };\n    this.state = {\n      title: props.title,\n      id: props.id\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: this.state.id,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Name\",\n            onChange: e => this.setState({\n              value: e.target.namevalue\n            }),\n            namevalue: this.state.namevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Preis\",\n            onChange: e => this.setState({\n              value2: e.target.pricevalue\n            }),\n            pricevalue: this.state.pricevalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"inputField\",\n            variant: \"secondary\",\n            onClick: () => {\n              this.addTableContent();\n            },\n            children: \"hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Preis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title,\n      content: props.content\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction insert_accordion(form) {\n  return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n    eventKey: form.id,\n    children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n      children: form.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          className: \"bg-light\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          className: \"bg-light\",\n          placeholder: \"Preis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"inputField\",\n          variant: \"secondary\"\n          /*onClick={() => {this.addTableContent()}}*/\n          ,\n          children: \"hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Preis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n\nfunction insert_table(income_entry) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: income_entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: income_entry.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/private_sites/FinancialOverview.js"],"names":["Component","React","supabase","Container","Row","Col","Accordion","Table","Button","InputGroup","FormControl","FinancialOverview","constructor","props","state","value","income_forms","spending_forms","incomes","spendings","createCategory","data","error","from","insert","title","user_id","componentDidMount","setState","fetchIncomeForms_forUser","select","eq","fetchIncomes_forIncomeForms","income_forms_id","fetchSpendingForms_forUser","fetchSpendings_forSpendingForms","spending_forms_id","fetchFinancialData_forUser","data_income_forms","incomes_array","Promise","all","map","income_form","id","auth","user","render","incomeform","InsertAccoridon","namevalue","pricevalue","e","target","value2","addTableContent","InsertTable","content","insert_accordion","form","insert_table","income_entry","amount"],"mappings":"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","sourcesContent":["import {Component, React,} from 'react';\r\nimport { supabase } from '../components/supabaseClient'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\n\r\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport class FinancialOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', income_forms: [], spending_forms: [], incomes: [], spendings: []};\r\n    }\r\n\r\n    async createCategory() {\r\n        const { data, error } = await supabase\r\n            .from('income_forms')\r\n            .insert([\r\n                { title: this.state.value, user_id: 1 }\r\n            ])\r\n\r\n        this.componentDidMount();\r\n        this.setState({value: \"\"});\r\n    }\r\n\r\n    async fetchIncomeForms_forUser(user_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"income_forms\")\r\n            .select()\r\n            .eq(\"user_id\", user_id)\r\n        return data\r\n    }\r\n\r\n    async fetchIncomes_forIncomeForms(income_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"incomes\")\r\n            .select()\r\n            .eq(\"income_forms_id\", income_forms_id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendingForms_forUser(user_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spending_forms\")\r\n            .select()\r\n            .eq(\"user_id\", user_id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings_forSpendingForms(spending_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spendings\")\r\n            .select()\r\n            .eq(\"spending_forms_id\", spending_forms_id)\r\n        return data\r\n    }\r\n\r\n    async fetchFinancialData_forUser(user_id){\r\n        const data_income_forms = await this.fetchIncomeForms_forUser(user_id)\r\n        const incomes_array = await Promise.all(data_income_forms.map(async income_form => {\r\n            await this.fetchIncomes_forIncomeForms(income_form.id)\r\n        }))\r\n\r\n        return [data_income_forms, incomes_array]\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const data = await this.fetchIncomeForms_forUser(supabase.auth.user().id)\r\n\r\n        this.setState({income_forms: data[0], spending_forms: data[1]});\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"toptext\">\r\n                            <h1 className=\"text-center\">Vermögenseingabe</h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col md={6}>\r\n                        <div className=\"inTitle\">\r\n                            <h2 className=\"text-center\">Einnahmen</h2>\r\n                        </div>\r\n                        <div className=\"inTitle\">\r\n                            <InputGroup>\r\n                                <FormControl type=\"text\" className=\"bg-light\" /*onChange={e => this.setState({ value: e.target.value })} value={this.state.value}*/ />\r\n                                <Button className=\"inputField\" variant=\"secondary\" /*onClick={() => {this.createCategory()}}*/>Create Category</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <Accordion>\r\n                            {\r\n                                this.state.income_forms.map(incomeform => <InsertAccoridon />)\r\n                            }\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertAccoridon extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {namevalue: '', data: [], pricevalue: ''};\r\n\r\n        this.state = {\r\n            title: props.title,\r\n            id: props.id,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Accordion.Item eventKey={this.state.id}>\r\n                <Accordion.Header>{this.state.title}</Accordion.Header>\r\n                <Accordion.Body>\r\n                    <InputGroup>\r\n                        <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" onChange={e => this.setState({ value: e.target.namevalue })} namevalue={this.state.namevalue} />\r\n                        <FormControl type=\"text\" className=\"bg-light\"  placeholder=\"Preis\" onChange={e => this.setState({ value2: e.target.pricevalue })} pricevalue={this.state.pricevalue} />\r\n                        <Button className=\"inputField\" variant=\"secondary\" onClick={() => {this.addTableContent()}}>hinzufügen</Button>\r\n                    </InputGroup>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            //this.state.incomes.map(incomes=>(<InsertTable title={incomes.title} content={incomes.amount} />))\r\n                        }\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: props.title,\r\n            content: props.content,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>{this.state.title}</td>\r\n                <td>{this.state.content}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction insert_accordion(form) {\r\n    return(\r\n        <Accordion.Item eventKey={form.id}>\r\n            <Accordion.Header>{form.title}</Accordion.Header>\r\n            <Accordion.Body>\r\n                <InputGroup>\r\n                    <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" />\r\n                    <FormControl type=\"text\" className=\"bg-light\"  placeholder=\"Preis\" />\r\n                    <Button className=\"inputField\" variant=\"secondary\" /*onClick={() => {this.addTableContent()}}*/>hinzufügen</Button>\r\n                </InputGroup>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        //this.state.incomes_or_spendings.map((income_or_spending) => {insert_table(income_or_spending)})\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </Accordion.Body>\r\n        </Accordion.Item>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction insert_table(income_entry) {\r\n    return(\r\n        <>\r\n            <tr>\r\n                <td>{income_entry.title}</td>\r\n                <td>{income_entry.amount}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}