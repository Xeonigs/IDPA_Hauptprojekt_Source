{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\public_sites\\\\Predictor.js\";\nimport { Container, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Predictor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amount1: \"\",\n      amount2: \"\",\n      errors: \"\",\n      output: \"\"\n    };\n  }\n\n  doMath() {\n    var result;\n    var amountVar1;\n\n    try {\n      amountVar1 = parseInt(this.state.amount1);\n    } catch (e) {\n      alert(\"awd\");\n    }\n\n    result = this.state.amount1 - this.state.amount2;\n\n    if (result >= 0) {\n      this.setState({\n        output: \"Saldo CHF \" + result\n      });\n    } else if (result < 0) {\n      this.setState({\n        output: \"Schulden CHF \" + result\n      });\n    }\n  }\n\n  render() {\n    const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Predictor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formdiv\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"number\",\n              className: \"bg-light\",\n              required: true,\n              onChange: e => this.setState({\n                amount1: e.target.value\n              }),\n              amount1: this.state.amount1,\n              onKeyDown: e => {\n                if (!valid_numbers_input.includes(e.key)) e.preventDefault();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"number\",\n              className: \"bg-light\",\n              required: true,\n              onChange: e => this.setState({\n                amount2: e.target.value\n              }),\n              amount2: this.state.amount2,\n              onKeyDown: e => {\n                if (!valid_numbers_input.includes(e.key)) e.preventDefault();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"inputField\",\n              variant: \"secondary\",\n              onClick: () => {\n                this.doMath();\n              },\n              children: \"berechnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), this.state.output !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 51\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/public_sites/Predictor.js"],"names":["Container","Button","InputGroup","FormControl","Component","Predictor","constructor","props","state","amount1","amount2","errors","output","doMath","result","amountVar1","parseInt","e","alert","setState","render","valid_numbers_input","target","value","includes","key","preventDefault"],"mappings":"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","sourcesContent":["import { Container, Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { Component } from 'react';\r\n\r\n\r\nexport class Predictor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {amount1: \"\", amount2: \"\", errors: \"\", output: \"\"};\r\n    }\r\n\r\n    doMath() {\r\n        var result;\r\n        var amountVar1;\r\n        try {\r\n            amountVar1 = parseInt(this.state.amount1)\r\n        } catch(e) {\r\n            alert(\"awd\")\r\n        }\r\n\r\n        result = this.state.amount1 - this.state.amount2;\r\n\r\n        if (result >= 0){\r\n            this.setState({output: \"Saldo CHF \" + result})\r\n        }\r\n        else if (result < 0){\r\n            this.setState({output: \"Schulden CHF \" + result})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"]\r\n\r\n        return (\r\n            <Container>\r\n                <div>\r\n                    <h3>Predictor</h3>\r\n                    <div className=\"formdiv\">\r\n                        <InputGroup>\r\n                            <FormControl type=\"number\" className=\"bg-light\"  required  onChange={e => this.setState({ amount1: e.target.value })} amount1={this.state.amount1} onKeyDown={e => {if (!valid_numbers_input.includes(e.key)) e.preventDefault()}}/>\r\n                            <FormControl type=\"number\" className=\"bg-light\"  required  onChange={e => this.setState({ amount2: e.target.value })} amount2={this.state.amount2} onKeyDown={e => {if (!valid_numbers_input.includes(e.key)) e.preventDefault()}}/>\r\n                            <Button className=\"inputField\" variant=\"secondary\" onClick={() => {this.doMath()}}>berechnen</Button>\r\n                        </InputGroup>\r\n                        {this.state.output !== \"\"?<p>{this.state.output}</p>:<p></p>}\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}