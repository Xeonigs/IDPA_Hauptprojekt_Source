{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\private_sites\\\\FinancialOverview.js\";\nimport { Component, React, useRef } from 'react';\nimport { supabase } from '../components/supabaseClient';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FinancialOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      income_forms: [],\n      spending_forms: [],\n      incomes: [],\n      spendings: []\n    };\n  }\n\n  async componentDidMount() {\n    const user_id = supabase.auth.user().id;\n    const data_income_forms = await this.fetchIncomeForms_forUser(user_id);\n    const data_incomes_array = [];\n\n    for (var index in data_income_forms) data_incomes_array.push(await this.fetchIncomes_forIncomeForms(data_income_forms[index].id));\n\n    const data_spending_forms = await this.fetchSpendingForms_forUser(user_id);\n    const data_spendings_array = [];\n\n    for (var index in data_spending_forms) data_spendings_array.push(await this.fetchSpendings_forSpendingForms(data_spending_forms[index].id));\n\n    this.setState({\n      income_forms: data_income_forms,\n      incomes: data_incomes_array,\n      spending_forms: data_spending_forms,\n      spendings: data_spendings_array\n    });\n  }\n\n  async fetchIncomeForms_forUser() {\n    const {\n      data,\n      error\n    } = await supabase.from(\"income_forms\").select();\n    return data;\n  }\n\n  async fetchIncomes_forIncomeForms(income_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"incomes\").select().eq(\"income_forms_id\", income_forms_id);\n    return data;\n  }\n\n  async fetchSpendingForms_forUser() {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spending_forms\").select();\n    return data;\n  }\n\n  async fetchSpendings_forSpendingForms(spending_forms_id) {\n    const {\n      data,\n      error\n    } = await supabase.from(\"spendings\").select().eq(\"spending_forms_id\", spending_forms_id);\n    return data;\n  }\n\n  async createIncomeCategorie(title) {\n    const {\n      data,\n      error\n    } = await supabase.from('income_forms').insert([{\n      title: title,\n      user_id: supabase.auth.user().id\n    }]);\n    this.componentDidMount();\n  }\n\n  async createSpendingCategorie(title) {\n    const {\n      data,\n      error\n    } = await supabase.from('spending_forms').insert([{\n      title: title,\n      user_id: supabase.auth.user().id\n    }]);\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toptext\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: \"Verm\\xF6genseingabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Einnahmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                id: \"new_incomeform_input\",\n                placeholder: \"Neue Kategorie\",\n                className: \"bg-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"inputField\",\n                variant: \"secondary\",\n                onClick: () => {\n                  const input = document.getElementById(\"new_incomeform_input\");\n                  this.createIncomeCategorie(input.value);\n                  input.value = \"\";\n                },\n                children: \"Create Income-Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: this.state.income_forms.map(incomeform => /*#__PURE__*/_jsxDEV(InsertAccoridon, {\n              isIncome: true,\n              form: incomeform,\n              amounts: this.state.incomes[this.state.income_forms.indexOf(incomeform)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 75\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Ausgabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTitle\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                id: \"new_spendingform_input\",\n                placeholder: \"Neue Kategorie\",\n                className: \"bg-light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"inputField\",\n                variant: \"secondary\",\n                onClick: () => {\n                  const input = document.getElementById(\"new_spendingform_input\");\n                  this.createSpendingCategorie(input.value);\n                  input.value = \"\";\n                },\n                children: \"Create Spending-Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: this.state.spending_forms.map(spendingform => /*#__PURE__*/_jsxDEV(InsertAccoridon, {\n              isIncome: false,\n              form: spendingform,\n              amounts: this.state.spendings[this.state.spending_forms.indexOf(spendingform)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 79\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertAccoridon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIncome: true,\n      form: {},\n      amounts: []\n    };\n    this.state = {\n      isIncome: props.isIncome,\n      form: props.form,\n      amounts: props.amounts\n    };\n  }\n\n  async fetchIncomes() {\n    const {\n      data,\n      error\n    } = await supabase.from('incomes').select().eq(\"income_forms_id\", this.state.form.id);\n    return data;\n  }\n\n  async fetchSpendings() {\n    const {\n      data,\n      error\n    } = await supabase.from('spendings').select().eq(\"spending_forms_id\", this.state.form.id);\n    return data;\n  }\n\n  async create_entry() {\n    if (this.state.title.replace(' ', '') === '') {\n      console.log(\"huso\");\n      return;\n    }\n\n    var amounts = [];\n\n    if (this.state.isIncome) {\n      await supabase.from(\"incomes\").insert([{\n        income_forms_id: this.state.form.id,\n        title: this.state.title,\n        amount: this.state.amount\n      }]);\n      amounts = await this.fetchIncomes();\n    } else {\n      await supabase.from(\"spendings\").insert([{\n        spending_forms_id: this.state.form.id,\n        title: this.state.title,\n        amount: this.state.amount\n      }]);\n      amounts = await this.fetchSpendings();\n    }\n\n    this.setState({\n      title: '',\n      amount: ''\n    });\n    this.setState({\n      amounts: amounts\n    });\n  }\n\n  render() {\n    const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"Delete\", \"Backspace\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\n    return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: this.state.form.id,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: this.state.form.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Name\",\n            onChange: e => this.setState({\n              title: e.target.value\n            }),\n            value: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"number\",\n            className: \"bg-light\",\n            placeholder: \"Preis\",\n            onChange: e => this.setState({\n              amount: e.target.value\n            }),\n            onKeyDown: e => {\n              if (!valid_numbers_input.includes(e.key)) e.preventDefault();\n            },\n            value: this.state.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"inputField\",\n            variant: \"secondary\",\n            onClick: () => {\n              this.create_entry();\n            },\n            children: \"hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Preis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.amounts.map(income => /*#__PURE__*/_jsxDEV(InsertTable, {\n              income: income\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 62\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InsertTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      income: {}\n    };\n    this.state = {\n      income: props.income\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.income.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.income.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/private_sites/FinancialOverview.js"],"names":["Component","React","useRef","supabase","Container","Row","Col","Accordion","Table","Button","InputGroup","FormControl","FinancialOverview","constructor","props","state","value","income_forms","spending_forms","incomes","spendings","componentDidMount","user_id","auth","user","id","data_income_forms","fetchIncomeForms_forUser","data_incomes_array","index","push","fetchIncomes_forIncomeForms","data_spending_forms","fetchSpendingForms_forUser","data_spendings_array","fetchSpendings_forSpendingForms","setState","data","error","from","select","income_forms_id","eq","spending_forms_id","createIncomeCategorie","title","insert","createSpendingCategorie","render","input","document","getElementById","map","incomeform","indexOf","spendingform","InsertAccoridon","isIncome","form","amounts","fetchIncomes","fetchSpendings","create_entry","replace","console","log","amount","valid_numbers_input","e","target","includes","key","preventDefault","income","InsertTable"],"mappings":"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","sourcesContent":["import {Component, React, useRef} from 'react';\r\nimport { supabase } from '../components/supabaseClient'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\n\r\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport class FinancialOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', income_forms: [], spending_forms: [], incomes: [], spendings: []};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const user_id = supabase.auth.user().id\r\n\r\n        const data_income_forms = await this.fetchIncomeForms_forUser(user_id)\r\n        const data_incomes_array = []\r\n        for (var index in data_income_forms)\r\n            data_incomes_array.push(await this.fetchIncomes_forIncomeForms(data_income_forms[index].id))\r\n\r\n        const data_spending_forms = await this.fetchSpendingForms_forUser(user_id)\r\n        const data_spendings_array = []\r\n        for (var index in data_spending_forms)\r\n            data_spendings_array.push(await this.fetchSpendings_forSpendingForms(data_spending_forms[index].id))\r\n\r\n\r\n        this.setState({income_forms: data_income_forms, incomes: data_incomes_array, spending_forms: data_spending_forms, spendings: data_spendings_array});\r\n    }\r\n\r\n    async fetchIncomeForms_forUser() {\r\n        const { data, error } = await supabase\r\n            .from(\"income_forms\")\r\n            .select()\r\n        return data\r\n    }\r\n\r\n    async fetchIncomes_forIncomeForms(income_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"incomes\")\r\n            .select()\r\n            .eq(\"income_forms_id\", income_forms_id)\r\n\r\n        return data\r\n    }\r\n\r\n    async fetchSpendingForms_forUser() {\r\n        const { data, error } = await supabase\r\n            .from(\"spending_forms\")\r\n            .select()\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings_forSpendingForms(spending_forms_id) {\r\n        const { data, error } = await supabase\r\n            .from(\"spendings\")\r\n            .select()\r\n            .eq(\"spending_forms_id\", spending_forms_id)\r\n        return data\r\n    }\r\n\r\n    async createIncomeCategorie(title) {\r\n        const { data, error } = await supabase\r\n            .from('income_forms')\r\n            .insert([\r\n                { title: title, user_id: supabase.auth.user().id }\r\n            ])\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    async createSpendingCategorie(title) {\r\n        const { data, error } = await supabase\r\n            .from('spending_forms')\r\n            .insert([\r\n                { title: title, user_id: supabase.auth.user().id }\r\n            ])\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"toptext\">\r\n                            <h1 className=\"text-center\">Vermögenseingabe</h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col md={6}>\r\n                        <div className=\"inTitle\">\r\n                            <h2 className=\"text-center\">Einnahmen</h2>\r\n                        </div>\r\n                        <div className=\"inTitle\">\r\n                            <InputGroup>\r\n                                <FormControl type=\"text\" id=\"new_incomeform_input\" placeholder=\"Neue Kategorie\" className=\"bg-light\" />\r\n                                <Button className=\"inputField\" variant=\"secondary\" onClick={() => {\r\n                                    const input = document.getElementById(\"new_incomeform_input\")\r\n                                    this.createIncomeCategorie(input.value)\r\n                                    input.value = \"\"\r\n                                }}>Create Income-Category</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <Accordion>\r\n                            {\r\n                                this.state.income_forms.map(incomeform => <InsertAccoridon isIncome={true} form={incomeform} amounts={this.state.incomes[this.state.income_forms.indexOf(incomeform)]} />)\r\n                            }\r\n                        </Accordion>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <div className=\"inTitle\">\r\n                            <h2 className=\"text-center\">Ausgabe</h2>\r\n                        </div>\r\n                        <div className=\"inTitle\">\r\n                            <InputGroup>\r\n                                <FormControl type=\"text\" id=\"new_spendingform_input\" placeholder=\"Neue Kategorie\" className=\"bg-light\" />\r\n                                <Button className=\"inputField\" variant=\"secondary\" onClick={() => {\r\n                                    const input = document.getElementById(\"new_spendingform_input\")\r\n                                    this.createSpendingCategorie(input.value)\r\n                                    input.value = \"\"\r\n                                }}>Create Spending-Category</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                        <Accordion>\r\n                            {\r\n                                this.state.spending_forms.map(spendingform => <InsertAccoridon isIncome={false} form={spendingform} amounts={this.state.spendings[this.state.spending_forms.indexOf(spendingform)]} />)\r\n                            }\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertAccoridon extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isIncome: true, form: {}, amounts: []};\r\n\r\n        this.state = {\r\n            isIncome: props.isIncome,\r\n            form: props.form,\r\n            amounts: props.amounts\r\n        }\r\n    }\r\n\r\n    async fetchIncomes() {\r\n        const { data, error} = await supabase\r\n            .from('incomes')\r\n            .select()\r\n            .eq(\"income_forms_id\", this.state.form.id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings() {\r\n        const { data, error } = await supabase\r\n            .from('spendings')\r\n            .select()\r\n            .eq(\"spending_forms_id\", this.state.form.id)\r\n        return data\r\n    }\r\n\r\n    async create_entry() {\r\n        if (this.state.title.replace(' ', '') === '') {\r\n            console.log(\"huso\")\r\n            return\r\n        }\r\n\r\n        var amounts = []\r\n        if (this.state.isIncome) {\r\n            await supabase\r\n                .from(\"incomes\")\r\n                .insert([\r\n                    { income_forms_id: this.state.form.id, title: this.state.title, amount: this.state.amount }\r\n                ])\r\n\r\n            amounts = await this.fetchIncomes()\r\n        }\r\n        else {\r\n            await supabase\r\n                .from(\"spendings\")\r\n                .insert([\r\n                    { spending_forms_id: this.state.form.id, title: this.state.title, amount: this.state.amount }\r\n                ])\r\n\r\n            amounts = await this.fetchSpendings()\r\n        }\r\n\r\n        this.setState({title: '', amount: ''})\r\n\r\n        this.setState({amounts: amounts})\r\n    }\r\n\r\n    render() {\r\n        const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\" , \"Delete\", \"Backspace\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"]\r\n\r\n        return(\r\n            <Accordion.Item eventKey={this.state.form.id}>\r\n                <Accordion.Header>{this.state.form.title}</Accordion.Header>\r\n                <Accordion.Body>\r\n                    <InputGroup>\r\n                        <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" onChange={e => this.setState({ title: e.target.value })} value={this.state.title} />\r\n                        <FormControl type=\"number\" className=\"bg-light\"  placeholder=\"Preis\" onChange={e => this.setState({ amount: e.target.value })} onKeyDown={e => {if (!valid_numbers_input.includes(e.key)) e.preventDefault()}} value={this.state.amount} />\r\n                        <Button className=\"inputField\" variant=\"secondary\" onClick={() => {this.create_entry()}}>hinzufügen</Button>\r\n                    </InputGroup>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.amounts.map(income => <InsertTable income={income} />)\r\n                        }\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        );\r\n    }\r\n}\r\n\r\nclass InsertTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {income: {}};\r\n\r\n        this.state = {\r\n            income: props.income\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>{this.state.income.title}</td>\r\n                <td>{this.state.income.amount}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}