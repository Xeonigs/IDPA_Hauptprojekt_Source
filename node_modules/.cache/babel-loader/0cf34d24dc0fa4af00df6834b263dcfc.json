{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\src\\\\private_sites\\\\FinancialOverview.js\";\nimport { Fragment, Component } from 'react';\nimport { supabase } from '../components/supabaseClient';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { FaRegTrashAlt } from 'react-icons/fa';\nimport { Navigation } from \"../components/Navigation\";\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl, ButtonGroup } from 'react-bootstrap';\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class FinancialOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      income_forms: [],\n      spending_forms: [],\n      incomes: {},\n      spendings: {}\n    };\n  }\n\n  async componentDidMount() {\n    this.fetch_all();\n    await supabase.from('income_forms').select();\n  }\n\n  async fetch_all() {\n    const data_income_forms = await this.fetchIncomeForms_forUser();\n    const data_incomes_dict = {};\n\n    for (let index_income_form in data_income_forms) {\n      const id = data_income_forms[index_income_form].id;\n      data_incomes_dict[id] = await this.fetchIncomes_forIncomeForms(id);\n    }\n\n    const data_spending_forms = await this.fetchSpendingForms_forUser();\n    const data_spendings_dict = {};\n\n    for (let index_spending_form in data_spending_forms) {\n      const id = data_spending_forms[index_spending_form].id;\n      data_spendings_dict[id] = await this.fetchSpendings_forSpendingForms(id);\n    }\n\n    this.setState({\n      income_forms: data_income_forms,\n      incomes: data_incomes_dict,\n      spending_forms: data_spending_forms,\n      spendings: data_spendings_dict\n    });\n  }\n\n  async fetchIncomeForms_forUser() {\n    const {\n      data\n    } = await supabase.from('income_forms').select();\n    return data;\n  }\n\n  async fetchIncomes_forIncomeForms(income_forms_id) {\n    const {\n      data\n    } = await supabase.from(\"incomes\").select().eq(\"income_forms_id\", income_forms_id);\n    return data;\n  }\n\n  async fetchSpendingForms_forUser() {\n    const {\n      data\n    } = await supabase.from(\"spending_forms\").select();\n    return data;\n  }\n\n  async fetchSpendings_forSpendingForms(spending_forms_id) {\n    const {\n      data\n    } = await supabase.from(\"spendings\").select().eq(\"spending_forms_id\", spending_forms_id);\n    return data;\n  }\n\n  async createIncomeCategorie(title) {\n    if (!(title.replace(/\\s/g, '') === '')) {\n      const {\n        data,\n        error\n      } = await supabase.from('income_forms').insert([{\n        title: title,\n        user_id: supabase.auth.user().id\n      }]);\n      await this.fetch_all();\n    }\n\n    this.setState({\n      title: ''\n    });\n  }\n\n  async createSpendingCategorie(title) {\n    if (!(title.replace(/\\s/g, '') === '')) {\n      /*const { data, error } =*/\n      await supabase.from('spending_forms').insert([{\n        title: title,\n        user_id: supabase.auth.user().id\n      }]);\n      await this.fetch_all();\n    }\n\n    this.setState({\n      title: ''\n    });\n  }\n\n  render() {\n    console.log(this.state.income_forms);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inTitle\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center title\",\n                children: \"Einnahmen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inTitle\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  type: \"text\",\n                  id: \"new_incomeform_input\",\n                  placeholder: \"Neue Kategorie\",\n                  className: \"bg-light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonColor\",\n                  variant: \"success\",\n                  onClick: () => {\n                    const input = document.getElementById(\"new_incomeform_input\");\n                    this.createIncomeCategorie(input.value).then();\n                    input.value = \"\";\n                  },\n                  children: \"Einnahme-Kategorie erstellen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              children: insertAccordion(this.state.income_forms, this.state.incomes, true, this.fetch_all.bind(this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inTitle\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center title\",\n                children: \"Ausgabe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inTitle\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  type: \"text\",\n                  id: \"new_spendingform_input\",\n                  placeholder: \"Neue Kategorie\",\n                  className: \"bg-light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonColor\",\n                  variant: \"secondary\",\n                  onClick: () => {\n                    const input = document.getElementById(\"new_spendingform_input\");\n                    this.createSpendingCategorie(input.value).then();\n                    input.value = \"\";\n                  },\n                  children: \"Ausgabe-Kategorie erstellen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              children: insertAccordion(this.state.spending_forms, this.state.spendings, false, this.fetch_all.bind(this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction insertAccordion(forms, entries, isIncome, fetch_method) {\n  return forms.map(form => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InsertAccordion, {\n      isIncome: isIncome,\n      form: form,\n      amounts: entries[form.id],\n      fetch_method: fetch_method\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, form.id + isIncome, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this));\n}\n\nclass InsertAccordion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIncome: props.isIncome,\n      form: props.form,\n      amounts: props.amounts,\n      title: '',\n      amount: '',\n      fetch_method: props.fetch_method\n    };\n  }\n\n  async fetch_entries() {\n    if (this.state.isIncome) {\n      this.setState({\n        amounts: await this.fetchIncomes()\n      });\n    } else {\n      this.setState({\n        amounts: await this.fetchSpendings()\n      });\n    }\n  }\n\n  async fetchIncomes() {\n    const {\n      data\n    } = await supabase.from('incomes').select().eq(\"income_forms_id\", this.state.form.id);\n    return data;\n  }\n\n  async fetchSpendings() {\n    const {\n      data\n    } = await supabase.from('spendings').select().eq(\"spending_forms_id\", this.state.form.id);\n    return data;\n  }\n\n  async create_entry() {\n    if (!(this.state.title.replace(/\\s/g, '') === '' || this.state.amount.replace(/\\s/g, '') === '')) {\n      let amounts;\n\n      if (this.state.isIncome) {\n        await supabase.from(\"incomes\").insert([{\n          income_forms_id: this.state.form.id,\n          title: this.state.title,\n          amount: this.state.amount\n        }]);\n        amounts = await this.fetchIncomes();\n      } else {\n        await supabase.from(\"spendings\").insert([{\n          spending_forms_id: this.state.form.id,\n          title: this.state.title,\n          amount: this.state.amount\n        }]);\n        amounts = await this.fetchSpendings();\n      }\n\n      this.setState({\n        amounts: amounts\n      });\n    }\n\n    this.setState({\n      title: '',\n      amount: ''\n    });\n  }\n\n  async delete_category() {\n    if (this.state.isIncome) {\n      await supabase.from('incomes').delete().match({\n        income_forms_id: this.state.form.id\n      });\n      await supabase.from('income_forms').delete().match({\n        id: this.state.form.id\n      });\n    } else {\n      await supabase.from('spendings').delete().match({\n        spending_forms_id: this.state.form.id\n      });\n      await supabase.from('spending_forms').delete().match({\n        id: this.state.form.id\n      });\n    }\n\n    await this.state.fetch_method();\n  }\n\n  render() {\n    const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"Delete\", \"Backspace\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\n    return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: this.state.form.id,\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          className: \"button-accordion\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.form.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-del-category\",\n          variant: \"transparent\",\n          onClick: () => {\n            this.delete_category().then();\n          },\n          children: /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 131\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            className: \"bg-light\",\n            placeholder: \"Name\",\n            onChange: e => this.setState({\n              title: e.target.value\n            }),\n            value: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"number\",\n            className: \"bg-light\",\n            placeholder: \"Preis\",\n            onChange: e => this.setState({\n              amount: e.target.value\n            }),\n            onKeyDown: e => {\n              if (!valid_numbers_input.includes(e.key)) e.preventDefault();\n            },\n            value: this.state.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"inputField\",\n            variant: \"secondary\",\n            onClick: () => {\n              this.create_entry().then();\n            },\n            children: \"hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Preis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"table-del-row text-center\",\n                children: /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 71\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: insertTableContent(this.state.amounts, this.state.isIncome, this.fetch_entries.bind(this)\n            /*, this.state.fetch_method*/\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction insertTableContent(entries, isIncome, fetch_method) {\n  return entries.map(entry => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InsertTable, {\n      isIncome: isIncome,\n      entry: entry,\n      fetch_method: fetch_method\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this)\n  }, entry.id + isIncome, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this));\n}\n\nclass InsertTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIncome: props.isIncome,\n      entry: props.entry,\n      fetch_method: props.fetch_method\n    };\n  }\n\n  async delete_entry(entry_id) {\n    if (this.state.isIncome) {\n      await supabase.from('incomes').delete().match({\n        id: entry_id\n      });\n    } else {\n      await supabase.from('spendings').delete().match({\n        id: entry_id\n      });\n    }\n\n    await this.state.fetch_method();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.entry.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.state.entry.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-del-category\",\n          variant: \"transparent\",\n          onClick: () => {\n            this.delete_entry(this.state.entry.id).then();\n          },\n          children: /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 147\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dave/WebstormProjects/wappsite/src/private_sites/FinancialOverview.js"],"names":["Fragment","Component","supabase","FaRegTrashAlt","Navigation","Container","Row","Col","Accordion","Table","Button","InputGroup","FormControl","ButtonGroup","FinancialOverview","constructor","props","state","income_forms","spending_forms","incomes","spendings","componentDidMount","fetch_all","from","select","data_income_forms","fetchIncomeForms_forUser","data_incomes_dict","index_income_form","id","fetchIncomes_forIncomeForms","data_spending_forms","fetchSpendingForms_forUser","data_spendings_dict","index_spending_form","fetchSpendings_forSpendingForms","setState","data","income_forms_id","eq","spending_forms_id","createIncomeCategorie","title","replace","error","insert","user_id","auth","user","createSpendingCategorie","render","console","log","input","document","getElementById","value","then","insertAccordion","bind","forms","entries","isIncome","fetch_method","map","form","InsertAccordion","amounts","amount","fetch_entries","fetchIncomes","fetchSpendings","create_entry","delete_category","delete","match","valid_numbers_input","e","target","includes","key","preventDefault","insertTableContent","entry","InsertTable","delete_entry","entry_id"],"mappings":"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","sourcesContent":["import { Fragment, Component } from 'react';\r\nimport { supabase } from '../components/supabaseClient'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\nimport { FaRegTrashAlt } from 'react-icons/fa';\r\nimport { Navigation } from \"../components/Navigation\";\r\nimport { Container, Row, Col, Accordion, Table, Button, InputGroup, FormControl, ButtonGroup } from 'react-bootstrap';\r\nimport \"../styles/styles.css\"\r\n\r\nexport class FinancialOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {income_forms: [], spending_forms: [], incomes: {}, spendings: {}};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.fetch_all()\r\n        await supabase\r\n            .from('income_forms')\r\n            .select()\r\n\r\n    }\r\n\r\n    async fetch_all() {\r\n        const data_income_forms = await this.fetchIncomeForms_forUser()\r\n        const data_incomes_dict = {}\r\n        for (let index_income_form in data_income_forms) {\r\n            const id = data_income_forms[index_income_form].id\r\n            data_incomes_dict[id] = await this.fetchIncomes_forIncomeForms(id)\r\n        }\r\n\r\n        const data_spending_forms = await this.fetchSpendingForms_forUser()\r\n        const data_spendings_dict = {}\r\n        for (let index_spending_form in data_spending_forms) {\r\n            const id = data_spending_forms[index_spending_form].id\r\n            data_spendings_dict[id] = await this.fetchSpendings_forSpendingForms(id)\r\n        }\r\n\r\n        this.setState({income_forms: data_income_forms, incomes: data_incomes_dict, spending_forms: data_spending_forms, spendings: data_spendings_dict})\r\n    }\r\n\r\n    async fetchIncomeForms_forUser() {\r\n        const { data } = await supabase\r\n            .from('income_forms')\r\n            .select()\r\n        return data\r\n    }\r\n\r\n    async fetchIncomes_forIncomeForms(income_forms_id) {\r\n        const { data } = await supabase\r\n            .from(\"incomes\")\r\n            .select()\r\n            .eq(\"income_forms_id\", income_forms_id)\r\n\r\n        return data\r\n    }\r\n\r\n    async fetchSpendingForms_forUser() {\r\n        const { data } = await supabase\r\n            .from(\"spending_forms\")\r\n            .select()\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings_forSpendingForms(spending_forms_id) {\r\n        const { data } = await supabase\r\n            .from(\"spendings\")\r\n            .select()\r\n            .eq(\"spending_forms_id\", spending_forms_id)\r\n        return data\r\n    }\r\n\r\n    async createIncomeCategorie(title) {\r\n        if (!(title.replace(/\\s/g, '') === '')) {\r\n            const { data, error } = await supabase\r\n                .from('income_forms')\r\n                .insert([\r\n                    { title: title, user_id: supabase.auth.user().id }\r\n                ])\r\n            await this.fetch_all();\r\n        }\r\n        this.setState({title: ''})\r\n    }\r\n\r\n    async createSpendingCategorie(title) {\r\n        if (!(title.replace(/\\s/g, '') === '')) {\r\n            /*const { data, error } =*/ await supabase\r\n                .from('spending_forms')\r\n                .insert([\r\n                    { title: title, user_id: supabase.auth.user().id }\r\n                ])\r\n            await this.fetch_all();\r\n        }\r\n        this.setState({title: ''})\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.income_forms)\r\n\r\n        return(\r\n            <>\r\n                <Navigation />\r\n                <Container>\r\n                    <Row className=\"mt-5\">\r\n                        <Col md={6}>\r\n                            <div className=\"inTitle\">\r\n                                <h2 className=\"text-center title\">Einnahmen</h2>\r\n                            </div>\r\n                            <div className=\"inTitle\">\r\n                                <InputGroup>\r\n                                    <FormControl type=\"text\" id=\"new_incomeform_input\" placeholder=\"Neue Kategorie\" className=\"bg-light\" />\r\n                                    <Button className=\"buttonColor\" variant=\"success\" onClick={() => {\r\n                                        const input = document.getElementById(\"new_incomeform_input\")\r\n                                        this.createIncomeCategorie(input.value).then()\r\n                                        input.value = \"\"\r\n                                    }}>Einnahme-Kategorie erstellen</Button>\r\n                                </InputGroup>\r\n                                <br/>\r\n                            </div>\r\n                            <Accordion>\r\n                                {\r\n                                    insertAccordion(this.state.income_forms, this.state.incomes, true, this.fetch_all.bind(this))\r\n                                }\r\n                            </Accordion>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <div className=\"inTitle\">\r\n                                <h2 className=\"text-center title\">Ausgabe</h2>\r\n                            </div>\r\n                            <div className=\"inTitle\">\r\n                                <InputGroup>\r\n                                    <FormControl type=\"text\" id=\"new_spendingform_input\" placeholder=\"Neue Kategorie\" className=\"bg-light\" />\r\n                                    <Button className=\"buttonColor\" variant=\"secondary\" onClick={() => {\r\n                                        const input = document.getElementById(\"new_spendingform_input\")\r\n                                        this.createSpendingCategorie(input.value).then()\r\n                                        input.value = \"\"\r\n                                    }}>Ausgabe-Kategorie erstellen</Button>\r\n                                </InputGroup>\r\n                                <br/>\r\n                            </div>\r\n                            <Accordion>\r\n                                {\r\n                                    insertAccordion(this.state.spending_forms, this.state.spendings, false, this.fetch_all.bind(this))\r\n                                }\r\n                            </Accordion>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction insertAccordion(forms, entries, isIncome, fetch_method) {\r\n    return forms.map(form => (\r\n        <Fragment key={form.id + isIncome}>\r\n            <InsertAccordion isIncome={isIncome} form={form} amounts={entries[form.id]} fetch_method={fetch_method} />\r\n        </Fragment>\r\n    ))\r\n}\r\n\r\nclass InsertAccordion extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isIncome: props.isIncome,\r\n            form: props.form,\r\n            amounts: props.amounts,\r\n            title: '',\r\n            amount: '',\r\n            fetch_method: props.fetch_method\r\n        }\r\n    }\r\n\r\n    async fetch_entries() {\r\n        if (this.state.isIncome) {\r\n            this.setState({amounts: await this.fetchIncomes()})\r\n        }\r\n        else {\r\n            this.setState({amounts: await this.fetchSpendings()})\r\n        }\r\n    }\r\n\r\n    async fetchIncomes() {\r\n        const { data } = await supabase\r\n            .from('incomes')\r\n            .select()\r\n            .eq(\"income_forms_id\", this.state.form.id)\r\n        return data\r\n    }\r\n\r\n    async fetchSpendings() {\r\n        const { data } = await supabase\r\n            .from('spendings')\r\n            .select()\r\n            .eq(\"spending_forms_id\", this.state.form.id)\r\n        return data\r\n    }\r\n\r\n    async create_entry() {\r\n        if (!(this.state.title.replace(/\\s/g, '') === '' || this.state.amount.replace(/\\s/g, '') === '')) {\r\n            let amounts\r\n            if (this.state.isIncome) {\r\n                await supabase\r\n                    .from(\"incomes\")\r\n                    .insert([\r\n                        { income_forms_id: this.state.form.id, title: this.state.title, amount: this.state.amount }\r\n                    ])\r\n                amounts = await this.fetchIncomes()\r\n            }\r\n            else {\r\n                await supabase\r\n                    .from(\"spendings\")\r\n                    .insert([\r\n                        { spending_forms_id: this.state.form.id, title: this.state.title, amount: this.state.amount }\r\n                    ])\r\n\r\n                amounts = await this.fetchSpendings()\r\n            }\r\n            this.setState({amounts: amounts})\r\n        }\r\n        this.setState({title: '', amount: ''})\r\n    }\r\n\r\n    async delete_category() {\r\n        if (this.state.isIncome) {\r\n            await supabase\r\n                .from('incomes')\r\n                .delete()\r\n                .match({income_forms_id: this.state.form.id})\r\n\r\n            await supabase\r\n                .from('income_forms')\r\n                .delete()\r\n                .match({id: this.state.form.id})\r\n        }\r\n        else {\r\n            await supabase\r\n                .from('spendings')\r\n                .delete()\r\n                .match({spending_forms_id: this.state.form.id})\r\n\r\n            await supabase\r\n                .from('spending_forms')\r\n                .delete()\r\n                .match({id: this.state.form.id})\r\n        }\r\n        await this.state.fetch_method()\r\n    }\r\n\r\n\r\n    render() {\r\n        const valid_numbers_input = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\" , \"Delete\", \"Backspace\", \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"]\r\n\r\n        return(\r\n            <Accordion.Item eventKey={this.state.form.id}>\r\n                <ButtonGroup className=\"button-group\">\r\n                    <Accordion.Header className=\"button-accordion\">\r\n                        <span>{this.state.form.title}</span>\r\n                    </Accordion.Header>\r\n                    <Button className=\"button-del-category\" variant=\"transparent\" onClick={() => {this.delete_category().then()}}><FaRegTrashAlt className=\"text-danger\"/></Button>\r\n                </ButtonGroup>\r\n                <Accordion.Body>\r\n                    <InputGroup>\r\n                        <FormControl type=\"text\" className=\"bg-light\" placeholder=\"Name\" onChange={e => this.setState({ title: e.target.value })} value={this.state.title} />\r\n                        <FormControl type=\"number\" className=\"bg-light\"  placeholder=\"Preis\" onChange={e => this.setState({ amount: e.target.value })} onKeyDown={e => {if (!valid_numbers_input.includes(e.key)) e.preventDefault()}} value={this.state.amount} />\r\n                        <Button className=\"inputField\" variant=\"secondary\" onClick={() => {this.create_entry().then()}}>hinzufügen</Button>\r\n                    </InputGroup>\r\n                    <br/>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Preis</th>\r\n                            <th className=\"table-del-row text-center\"><FaRegTrashAlt/></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            insertTableContent(this.state.amounts, this.state.isIncome, this.fetch_entries.bind(this)/*, this.state.fetch_method*/)\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        );\r\n    }\r\n}\r\n\r\nfunction insertTableContent(entries, isIncome, fetch_method) {\r\n    return entries.map(entry => (\r\n        <Fragment key={entry.id + isIncome}>\r\n            <InsertTable isIncome={isIncome} entry={entry} fetch_method={fetch_method} />\r\n        </Fragment>\r\n    ))\r\n}\r\n\r\nclass InsertTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isIncome: props.isIncome,\r\n            entry: props.entry,\r\n            fetch_method: props.fetch_method\r\n        }\r\n    }\r\n\r\n    async delete_entry(entry_id) {\r\n        if (this.state.isIncome) {\r\n            await supabase\r\n                .from('incomes')\r\n                .delete()\r\n                .match({id: entry_id})\r\n        } else {\r\n            await supabase\r\n                .from('spendings')\r\n                .delete()\r\n                .match({id: entry_id})\r\n        }\r\n        await this.state.fetch_method()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>{this.state.entry.title}</td>\r\n                <td>{this.state.entry.amount}</td>\r\n                <td><Button className=\"button-del-category\" variant=\"transparent\" onClick={() => {this.delete_entry(this.state.entry.id).then()}}><FaRegTrashAlt className=\"text-danger\"/></Button></td>\r\n            </tr>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}