{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport crossFetch from 'cross-fetch';\n\nvar _getErrorMessage = function _getErrorMessage(err) {\n  return err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\n};\n\nvar handleError = function handleError(error, reject) {\n  if (typeof error.json !== 'function') {\n    return reject(error);\n  }\n\n  error.json().then(function (err) {\n    return reject({\n      message: _getErrorMessage(err),\n      status: (error === null || error === void 0 ? void 0 : error.status) || 500\n    });\n  });\n};\n\nvar _getRequestParams = function _getRequestParams(method, options, parameters, body) {\n  var params = {\n    method: method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n\n  if (method === 'GET') {\n    return params;\n  }\n\n  params.headers = Object.assign({\n    'Content-Type': 'application/json'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return Object.assign(Object.assign({}, params), parameters);\n};\n\nfunction _handleRequest() {\n  var fetcher = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : crossFetch;\n  var method = arguments.length > 1 ? arguments[1] : undefined;\n  var url = arguments.length > 2 ? arguments[2] : undefined;\n  var options = arguments.length > 3 ? arguments[3] : undefined;\n  var parameters = arguments.length > 4 ? arguments[4] : undefined;\n  var body = arguments.length > 5 ? arguments[5] : undefined;\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fetcher(url, _getRequestParams(method, options, parameters, body)).then(function (result) {\n                if (!result.ok) throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson) return resolve(result);\n                return result.json();\n              }).then(function (data) {\n                return resolve(data);\n              }).catch(function (error) {\n                return handleError(error, reject);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexport function get(fetcher, url, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", _handleRequest(fetcher, 'GET', url, options, parameters));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\nexport function post(fetcher, url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", _handleRequest(fetcher, 'POST', url, options, parameters, body));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\nexport function put(fetcher, url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", _handleRequest(fetcher, 'PUT', url, options, parameters, body));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}\nexport function remove(fetcher, url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", _handleRequest(fetcher, 'DELETE', url, options, parameters, body));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\Dave\\WebstormProjects\\wappsite\\node_modules\\@supabase\\storage-js\\src\\lib\\fetch.ts"],"names":[],"mappings":"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","sourcesContent":["import crossFetch from 'cross-fetch'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = (error: any, reject: any) => {\n  if (typeof error.json !== 'function') {\n    return reject(error)\n  }\n  error.json().then((err: any) => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: error?.status || 500,\n    })\n  })\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch = crossFetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return resolve(result)\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch | undefined,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch | undefined,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch | undefined,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function remove(\n  fetcher: Fetch | undefined,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n"]},"metadata":{},"sourceType":"module"}