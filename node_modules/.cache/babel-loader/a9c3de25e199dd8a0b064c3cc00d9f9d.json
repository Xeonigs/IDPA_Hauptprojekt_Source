{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Dave\\\\WebstormProjects\\\\wappsite\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { DEFAULT_TIMEOUT } from '../lib/constants';\n\nvar Push = /*#__PURE__*/function () {\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  function Push(channel, event) {\n    var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_TIMEOUT;\n\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload;\n    this.timeout = timeout;\n    this.sent = false;\n    this.timeoutTimer = undefined;\n    this.ref = '';\n    this.receivedResp = null;\n    this.recHooks = [];\n    this.refEvent = null;\n  }\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n\n      this._cancelRefEvent();\n\n      this.ref = '';\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this._hasReceived('timeout')) {\n        return;\n      }\n\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"updatePayload\",\n    value: function updatePayload(payload) {\n      this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      var _a;\n\n      if (this._hasReceived(status)) {\n        callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n      }\n\n      this.recHooks.push({\n        status: status,\n        callback: callback\n      });\n      return this;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n      this.channel.on(this.refEvent, function (payload) {\n        _this._cancelRefEvent();\n\n        _this._cancelTimeout();\n\n        _this.receivedResp = payload;\n\n        _this._matchReceive(payload);\n      });\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger('timeout', {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      if (this.refEvent) this.channel.trigger(this.refEvent, {\n        status: status,\n        response: response\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._cancelRefEvent();\n\n      this._cancelTimeout();\n    }\n  }, {\n    key: \"_cancelRefEvent\",\n    value: function _cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"_cancelTimeout\",\n    value: function _cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = undefined;\n    }\n  }, {\n    key: \"_matchReceive\",\n    value: function _matchReceive(_ref) {\n      var status = _ref.status,\n          response = _ref.response;\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"_hasReceived\",\n    value: function _hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }]);\n\n  return Push;\n}();\n\nexport { Push as default };","map":{"version":3,"sources":["C:\\Users\\Dave\\WebstormProjects\\wappsite\\node_modules\\@supabase\\realtime-js\\src\\lib\\push.ts"],"names":[],"mappings":"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","sourcesContent":["import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport RealtimeSubscription from '../RealtimeSubscription'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: Function\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeSubscription,\n    public event: string,\n    public payload: { [key: string]: unknown } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n    })\n  }\n\n  updatePayload(payload: { [key: string]: unknown }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    })\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent) this.channel.trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n    this.channel.off(this.refEvent)\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({\n    status,\n    response,\n  }: {\n    status: string\n    response: Function\n  }) {\n    this.recHooks\n      .filter((h) => h.status === status)\n      .forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n"]},"metadata":{},"sourceType":"module"}